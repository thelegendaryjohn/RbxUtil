"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1740],{43225:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"ts","title":"TypeScript","description":"Some modules can be used in roblox-ts. These modules live within their own @rbxutil NPM org.","source":"@site/docs/ts.md","sourceDirName":".","slug":"/ts","permalink":"/RbxUtil/docs/ts","draft":false,"unlisted":false,"editUrl":"https://github.com/Sleitnick/RbxUtil/edit/main/docs/ts.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Getting Started","permalink":"/RbxUtil/docs/intro"}}');var i=n(74848),s=n(28453);const r={sidebar_position:2},l="TypeScript",a={},d=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Rojo Project",id:"rojo-project",level:3},{value:"Types Configuration",id:"types-configuration",level:3},{value:"Different Org",id:"different-org",level:2},{value:"Contributing",id:"contributing",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"typescript",children:"TypeScript"})}),"\n",(0,i.jsxs)(t.p,{children:["Some modules can be used in ",(0,i.jsx)(t.a,{href:"https://roblox-ts.com/",children:"roblox-ts"}),". These modules live within their own ",(0,i.jsx)(t.code,{children:"@rbxutil"})," NPM org."]}),"\n",(0,i.jsxs)(t.p,{children:["For a full listing of the available NPM packages, visit the ",(0,i.jsx)(t.a,{href:"https://www.npmjs.com/org/rbxutil",children:"RbxUtil NPM org"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(t.p,{children:["Installing modules works like any other roblox-ts package, except that the prefix will be ",(0,i.jsx)(t.code,{children:"@rbxutil"}),". For instance, to install the quaternion library, run the following command:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ npm install @rbxutil/quaternion\n"})}),"\n",(0,i.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(t.p,{children:["In order for modules from ",(0,i.jsx)(t.code,{children:"@rbxutil"})," to work, two changes will need to be made:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Add the modules to the Rojo project file"}),"\n",(0,i.jsx)(t.li,{children:"Expose the types to TypeScript"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"rojo-project",children:"Rojo Project"}),"\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.code,{children:"default.project.json"})," file, add the ",(0,i.jsx)(t.code,{children:"@rbxutil"})," directory into ReplicatedStorage, right alongside ",(0,i.jsx)(t.code,{children:"@rbxts"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'"node_modules": {\n\t"$className": "Folder",\n\t"@rbxts": {\n\t\t"$path": "node_modules/@rbxts"\n\t},\n\t"@rbxutil": {\n\t\t"$path": "node_modules/@rbxutil"\n\t}\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"types-configuration",children:"Types Configuration"}),"\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.code,{children:"tsconfig.json"})," file, add the ",(0,i.jsx)(t.code,{children:"@rbxutil"})," directory to the types list. The ",(0,i.jsx)(t.code,{children:"@rbxts"})," org should already be there:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'"typeRoots": ["node_modules/@rbxts", "node_modules/@rbxutil"]\n'})}),"\n",(0,i.jsx)(t.h2,{id:"different-org",children:"Different Org"}),"\n",(0,i.jsxs)(t.p,{children:["In order to avoid naming conflicts and namespace cluttering, RbxUtil modules will be placed in their own NPM org (",(0,i.jsx)(t.code,{children:"@rbxutil"}),"). This has been done out of respect for roblox-ts package developers and to allow RbxUtil to grow unbounded by the current default org packages."]}),"\n",(0,i.jsxs)(t.p,{children:["For example, there is already a Signal package within the default ",(0,i.jsx)(t.code,{children:"@rbxts"})," org. Also, RbxUtil has many generic names, such as Log and Shake. While these are named to convey their meaning easily, it is best to not clutter the ",(0,i.jsx)(t.code,{children:"@rbxts"})," org with a vast array of such names from a single repository. This naming issue is not an issue for Wally, as Wally uses the author's name as the namespace."]}),"\n",(0,i.jsx)(t.h2,{id:"contributing",children:"Contributing"}),"\n",(0,i.jsx)(t.p,{children:"If you find any types that are incorrect, missing, or broken, please feel free to open up a GitHub Issue and/or pull request to address and fix these issues."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(96540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);